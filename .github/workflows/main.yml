name: CA HTTP Server CI/CD

on: 
  push:
    branches:
      - main

jobs:
  build:
    name: Build HTTP Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate With DockerHub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=docker.io/vithsutratechnologies/ca-project-http-server:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy:
    name: Deploy Docker Image to Cloud VM
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create .env file
        run: |
          echo "SERVER_MODE=${{ secrets.SERVER_MODE }}" >> .env
          echo "ROOT_USERNAME=${{ secrets.ROOT_PASSWORD }}" >> .env
          echo "ROOT_PASSWORD=${{ secrets.ROOT_PASSWORD }}" >> .env
          echo "JWT_TOKEN_SCRETE_KEY=${{ secrets.JWT_TOKEN_SCRETE_KEY }}" >> .env
          echo "SERVER_LISTEN_ADDRESS=${{ secrets.SERVER_LISTEN_ADDRESS }}" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}" >> .env
          echo "AWS_S3_ROOT_KEY=${{ secrets.AWS_S3_ROOT_KEY }}" >> .env
          echo "AWS_S3_OBJECT_ROOT_URL=${{ secrets.AWS_S3_OBJECT_ROOT_URL }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRETE_ACCESS_KEY=${{ secrets.AWS_SECRETE_ACCESS_KEY }}" >> .env
          echo "RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}" >> .env
          echo "QUEUE_NAME=${{ secrets.QUEUE_NAME }}" >> .env
          echo "AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}" >> .env

      - name: Setup Deploy Environment in Cloud Instance
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: "${{ secrets.CLOUD_INSTANCE_HOST }}"
          username: "${{ secrets.CLOUD_INSTANCE_USERNAME }}"
          key: "${{ secrets.CLOUD_INSTANCE_SSH_PRIVATE_KEY }}"
          script: |
            echo "Connected to VM"
            mkdir -p ~/ca-project/ca-project-http-server-deployment

      - name: Upload .env to Cloud Instance
        run: |
          echo "${{ secrets.CLOUD_INSTANCE_SSH_PRIVATE_KEY }}" > ca_ssh_key
          chmod 600 ca_ssh_key
          scp -o StrictHostKeyChecking=no -i ca_ssh_key .env ${{ secrets.CLOUD_INSTANCE_USERNAME }}@${{ secrets.CLOUD_INSTANCE_HOST }}:~/ca-project/ca-project-http-server-deployment/.env

      - name: Deploying Docker Image on Cloud Instance
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: "${{ secrets.CLOUD_INSTANCE_HOST }}"
          username: "${{ secrets.CLOUD_INSTANCE_USERNAME }}"
          key: "${{ secrets.CLOUD_INSTANCE_SSH_PRIVATE_KEY }}"
          script: |
            IMAGE_NAME=docker.io/vithsutratechnologies/ca-project-http-server:latest
            docker pull $IMAGE_NAME
            docker images | grep "<none>" | awk '{print $3}' | xargs -r docker rmi -f
            docker ps | grep ca-project-http-server | awk '{print $1}' | xargs -I {} docker kill {}
            docker ps -a | grep ca-project-http-server | awk '{print $1}' | xargs -I {} docker rm {}
            docker run -d -p 8080:8080 --name ca-project-http-server --env-file ~/ca-project/ca-project-http-server-deployment/.env $IMAGE_NAME